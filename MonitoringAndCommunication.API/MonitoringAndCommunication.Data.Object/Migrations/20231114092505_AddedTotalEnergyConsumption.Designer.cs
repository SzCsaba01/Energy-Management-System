// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoringAndCommunication.Data.Object.Data;

#nullable disable

namespace MonitoringAndCommunication.Data.Object.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231114092505_AddedTotalEnergyConsumption")]
    partial class AddedTotalEnergyConsumption
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonitoringAndCommunication.Data.Object.Entities.DeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentHourEnergyConsumption")
                        .HasColumnType("float");

                    b.Property<int>("CurrentNumberOfMeasurments")
                        .HasColumnType("int");

                    b.Property<int>("MaxHourlyEnergyConsumption")
                        .HasColumnType("int");

                    b.Property<double>("TotalEnergyConsumption")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("MonitoringAndCommunication.Data.Object.Entities.MonitoringEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MeasurmentValue")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Monitorings");
                });

            modelBuilder.Entity("MonitoringAndCommunication.Data.Object.Entities.MonitoringEntity", b =>
                {
                    b.HasOne("MonitoringAndCommunication.Data.Object.Entities.DeviceEntity", "Device")
                        .WithMany("Monitorings")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("MonitoringAndCommunication.Data.Object.Entities.DeviceEntity", b =>
                {
                    b.Navigation("Monitorings");
                });
#pragma warning restore 612, 618
        }
    }
}
